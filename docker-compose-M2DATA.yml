version: '3.1'

services:
  #ZOOKEEPER
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper_projet
    ports:
      - "2181:2181"
    networks:
      - bigdata-net

  #KAFKA
  kafka:
    image: wurstmeister/kafka
    container_name: kafka_projet
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 524288000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 524288000
    depends_on:
      - zookeeper
    networks:
      - bigdata-net

  #NIFI
  nifi:
    image: apache/nifi:latest
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      NIFI_WEB_HTTPS_HOST: "0.0.0.0"
      NIFI_WEB_HTTPS_PORT: "8443"
      NIFI_WEB_PROXY_HOST: "localhost:8443"
    depends_on:
      - kafka
    networks:
      - bigdata-net
 

  #SPARK MASTER
  spark-master:
    image: apache/spark
    container_name: spark-master
    command: bash -c "/opt/spark/sbin/start-master.sh && tail -f /opt/spark/logs/*"  pour le spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "8081:8080"
      - "7077:7077"
    networks:
      - bigdata-net
    volumes:
      - ./spark:/opt/spark/work-dir

  #SPARK WORKER
  spark-worker:
    image: apache/spark
    container_name: spark-worker
    command: bash -c "/opt/spark/sbin/start-worker.sh spark://spark-master:7077 && tail -f /opt/spark/logs/*" pour le spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    networks:
      - bigdata-net

  #POSTGRESQL
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - bigdata-net

  #GRAFANA
  grafana:
    image: grafana/grafana:latest
    container_name: grafana_projet
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - postgres
    volumes:
      - ./grafana_data:/var/lib/grafana
    networks:
      - bigdata-net

#RÃ©seau commun
networks:
  bigdata-net:
    driver: bridge
